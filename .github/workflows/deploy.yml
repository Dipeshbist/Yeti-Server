name: Deploy NestJS App

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout code from GitHub
    - name: Checkout code
      uses: actions/checkout@v4

    # 2Ô∏è‚É£ Setup Node.js environment
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    # 3Ô∏è‚É£ Install dependencies and build locally (verifies build works)
    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    # 4Ô∏è‚É£ Setup SSH connection
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    # 5Ô∏è‚É£ Deploy to server
    - name: Deploy to server
      env:
        SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e  # stop script if any command fails

          cd /root/deployments/yeti-backend || mkdir -p /root/deployments/yeti-backend
          cd /root/deployments/yeti-backend

          if [ ! -d "Yeti-Server" ]; then
            echo "üì¶ Cloning repository for the first time..."
            git clone https://github.com/Dipeshbist/Yeti-Server.git
          fi

          cd Yeti-Server

          echo "üì• Pulling latest code from main..."
          git fetch origin main
          git reset --hard origin/main

          echo "‚öôÔ∏è Installing dependencies..."
          npm ci

          echo "üèóÔ∏è Building project..."
          npm run build

          echo "üìò Running Prisma setup..."
          npx prisma generate || echo "‚ö†Ô∏è Prisma client generation skipped"
          npx prisma migrate deploy || echo "‚ö†Ô∏è No pending migrations"

          echo "üöÄ Restarting backend with PM2..."
          pm2 delete yeti-backend || true
          pm2 start dist/src/main.js --name yeti-backend
          pm2 save

          echo "‚úÖ Deployment completed successfully!"
        EOF

    # 6Ô∏è‚É£ Health Check
    - name: Health Check
      run: |
        echo "ü©∫ Running health check..."
        sleep 10
        curl -f http://${{ secrets.SSH_HOST }}:8000 || echo "‚ö†Ô∏è Health check failed, but continuing..."
